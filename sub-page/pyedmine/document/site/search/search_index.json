{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to PyEdmine\u2019s documentation! Introduction PyEdmine is a library of algorithms for reproducing Knowledge Tracing , Cognitive Diagnosis , and Exercise Recommendation models. Implemented Built-in data processing Assist2009 Assist2009-full Assist2012 Assist2015 Assist2017 Edi2020-task1 Edi2020-task34 SLP-mat SLP-phy SLP-eng SLP-chi SLP-geo SLP-bio Moocradar-C[courseId] Statics2011 Junyi2015 Ednet-kt1 Slepemapy-anatomy Poj Xes3g5m Built-in models Knowledge Tracing DKT ( Download the trained model ) DKVMN ( Download the trained model ) SKVMN ( Download the trained model ) ATKT ( Download the trained model ) DKTForget ( Download the trained model ) qDKT ( Download the trained model ) AKT ( Download the trained model ) SimpleKT ( Download the trained model ) SparseKT ( Download the trained model ) DIMKT ( Download the trained model ) LPKT ( Download the trained model ) LBKT ( Download the trained model ) QIKT ( Download the trained model ) QDCKT ( Download the trained model ) MIKT ( Download the trained model ) Cognitive Diagnosis IRT ( Download the trained model ) MIRT ( Download the trained model ) DINA ( Download the trained model ) NCD ( Download the trained model ) RCD ( Download the trained model ) HyperCD ( Download the trained model ) HeirCDF Exercise Recommendation EB-CF UB-CF KG4EX ( Download the trained model )","title":"Home"},{"location":"#introduction","text":"PyEdmine is a library of algorithms for reproducing Knowledge Tracing , Cognitive Diagnosis , and Exercise Recommendation models.","title":"Introduction"},{"location":"#implemented","text":"","title":"Implemented"},{"location":"#built-in-data-processing","text":"Assist2009 Assist2009-full Assist2012 Assist2015 Assist2017 Edi2020-task1 Edi2020-task34 SLP-mat SLP-phy SLP-eng SLP-chi SLP-geo SLP-bio Moocradar-C[courseId] Statics2011 Junyi2015 Ednet-kt1 Slepemapy-anatomy Poj Xes3g5m","title":"Built-in data processing"},{"location":"#built-in-models","text":"","title":"Built-in models"},{"location":"#knowledge-tracing","text":"DKT ( Download the trained model ) DKVMN ( Download the trained model ) SKVMN ( Download the trained model ) ATKT ( Download the trained model ) DKTForget ( Download the trained model ) qDKT ( Download the trained model ) AKT ( Download the trained model ) SimpleKT ( Download the trained model ) SparseKT ( Download the trained model ) DIMKT ( Download the trained model ) LPKT ( Download the trained model ) LBKT ( Download the trained model ) QIKT ( Download the trained model ) QDCKT ( Download the trained model ) MIKT ( Download the trained model )","title":"Knowledge Tracing"},{"location":"#cognitive-diagnosis","text":"IRT ( Download the trained model ) MIRT ( Download the trained model ) DINA ( Download the trained model ) NCD ( Download the trained model ) RCD ( Download the trained model ) HyperCD ( Download the trained model ) HeirCDF","title":"Cognitive Diagnosis"},{"location":"#exercise-recommendation","text":"EB-CF UB-CF KG4EX ( Download the trained model )","title":"Exercise Recommendation"},{"location":"doc/","text":"Quick Start github Data Preporcessed Files data.txt - Data file in a unified format Q_table.npy - Ndarray of shape (n_question, n_concept), where each row is a one-hot or multi-hot vector, indicating the correspondence between questions and concepts statics_preprocessed.json - Statistics of the dataset [question|concept]_id_map.csv - The correspondence between the original question/concept ID and the mapped question/concept ID (mapped to integers, starting from 0), as well as the meta information of the question and concept Format of data.txt Example of Ednet-kt1 dataset user_id,seq_len;question_seq,correctness_seq,time_seq,use_time_seq 0 76 0,1,2,3,4,5,6,8,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,46,32,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,64,30,48,65 1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,0,1,1,1,1,0,1,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,1,0 1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515917,1515917,1515917,1515917,1515917,1515917,1515917,1515917,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517184,1517184,1517184,1517184,1517185,1517185,1517185,1517185,1517185,1517185,1517185,1517185,1517185,1517185 20,21,21,27,13,13,13,12,12,12,12,12,12,18,18,18,26,16,6,19,27,29,53,53,53,53,51,51,51,51,20,19,18,17,15,14,16,16,18,16,14,17,18,16,15,18,15,30,20,21,12,16,15,32,29,34,18,19,16,32,18,6,17,14,16,31,20,20,21,18,25,15,19,21,22,23 1 77 70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,33,130,131,132,37,133,134,135,49,136,137,138,63,139,140,141,45 0,0,0,0,1,0,0,1,1,0,1,1,0,1,1,1,0,1,0,1,1,1,0,0,1,1,0,0,0,1,0,0,1,1,0,1,1,1,1,1,0,0,1,0,0,1,1,1,0,0,1,1,0,0,0,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0 1562640,1562640,1562640,1562640,1562640,1562640,1562640,1564381,1564381,1564381,1564381,1564381,1564381,1564381,1564381,1564381,1564381,1565079,1565079,1565079,1565079,1565079,1565079,1565079,1565079,1565079,1565079,1565973,1565973,1565973,1565973,1565973,1565973,1565973,1565973,1565973,1565973,1566090,1566090,1566090,1566090,1566090,1566437,1566437,1566437,1566437,1566437,1568368,1568368,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568551,1568551,1568551,1568551,1568551,1568551,1568551,1568551,1568551,1568551 29,21,27,10,7,4,16,36,33,33,19,34,42,9,21,24,4,37,160,24,8,5,21,32,16,24,19,9,14,5,19,4,15,10,11,9,5,9,15,11,7,38,15,20,21,9,15,18,15,18,20,10,24,5,20,13,10,12,9,15,20,13,14,19,9,9,14,14,21,10,14,13,21,16,18,17,23 ... The first line is separated by a semicolon ; . On the left is the user information contained in the dataset, and on the right is the information related to each interaction between the user and the question contained in the dataset. Concept aggregation The official code of some models can only run on a single-concept dataset (i.e., one question corresponds to only one concept), such as DKT . We designed an Embedding Layer that can automatically index the corresponding concept ids through the question id and return the aggregated (for example, average pooling ) concept embedding corresponding to the question.","title":"Document"},{"location":"doc/#quick-start","text":"github","title":"Quick Start"},{"location":"doc/#data","text":"","title":"Data"},{"location":"doc/#preporcessed-files","text":"data.txt - Data file in a unified format Q_table.npy - Ndarray of shape (n_question, n_concept), where each row is a one-hot or multi-hot vector, indicating the correspondence between questions and concepts statics_preprocessed.json - Statistics of the dataset [question|concept]_id_map.csv - The correspondence between the original question/concept ID and the mapped question/concept ID (mapped to integers, starting from 0), as well as the meta information of the question and concept","title":"Preporcessed Files"},{"location":"doc/#format-of-datatxt","text":"Example of Ednet-kt1 dataset user_id,seq_len;question_seq,correctness_seq,time_seq,use_time_seq 0 76 0,1,2,3,4,5,6,8,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,46,32,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,64,30,48,65 1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,1,0,1,0,1,0,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,0,1,1,1,1,0,1,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,1,0 1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515916,1515917,1515917,1515917,1515917,1515917,1515917,1515917,1515917,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517126,1517184,1517184,1517184,1517184,1517185,1517185,1517185,1517185,1517185,1517185,1517185,1517185,1517185,1517185 20,21,21,27,13,13,13,12,12,12,12,12,12,18,18,18,26,16,6,19,27,29,53,53,53,53,51,51,51,51,20,19,18,17,15,14,16,16,18,16,14,17,18,16,15,18,15,30,20,21,12,16,15,32,29,34,18,19,16,32,18,6,17,14,16,31,20,20,21,18,25,15,19,21,22,23 1 77 70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,33,130,131,132,37,133,134,135,49,136,137,138,63,139,140,141,45 0,0,0,0,1,0,0,1,1,0,1,1,0,1,1,1,0,1,0,1,1,1,0,0,1,1,0,0,0,1,0,0,1,1,0,1,1,1,1,1,0,0,1,0,0,1,1,1,0,0,1,1,0,0,0,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0 1562640,1562640,1562640,1562640,1562640,1562640,1562640,1564381,1564381,1564381,1564381,1564381,1564381,1564381,1564381,1564381,1564381,1565079,1565079,1565079,1565079,1565079,1565079,1565079,1565079,1565079,1565079,1565973,1565973,1565973,1565973,1565973,1565973,1565973,1565973,1565973,1565973,1566090,1566090,1566090,1566090,1566090,1566437,1566437,1566437,1566437,1566437,1568368,1568368,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568550,1568551,1568551,1568551,1568551,1568551,1568551,1568551,1568551,1568551,1568551 29,21,27,10,7,4,16,36,33,33,19,34,42,9,21,24,4,37,160,24,8,5,21,32,16,24,19,9,14,5,19,4,15,10,11,9,5,9,15,11,7,38,15,20,21,9,15,18,15,18,20,10,24,5,20,13,10,12,9,15,20,13,14,19,9,9,14,14,21,10,14,13,21,16,18,17,23 ... The first line is separated by a semicolon ; . On the left is the user information contained in the dataset, and on the right is the information related to each interaction between the user and the question contained in the dataset.","title":"Format of data.txt"},{"location":"doc/#concept-aggregation","text":"The official code of some models can only run on a single-concept dataset (i.e., one question corresponds to only one concept), such as DKT . We designed an Embedding Layer that can automatically index the corresponding concept ids through the question id and return the aggregated (for example, average pooling ) concept embedding corresponding to the question.","title":"Concept aggregation"}]}